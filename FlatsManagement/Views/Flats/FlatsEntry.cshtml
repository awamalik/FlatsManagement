@model FlatsManagement.Models.Flats

@{
    ViewBag.Title = "FlatsEntry";
    //var cities = new List<SelectListItem>();
    //cities.Add(new SelectListItem { Value = "Rawalpindi", Text = "Rawlpindi" });
    //cities.Add(new SelectListItem { Value = "Lahore", Text = "Lahore" });
    //cities.Add(new SelectListItem { Value = "Karachi", Text = "Islamabad" });
    //cities.Add(new SelectListItem { Value = "Bahawalpur", Text = "Bahawalpur" });
    //cities.Add(new SelectListItem { Value = "Haiderabad", Text = "Haiderabad" });
    var flatType = new List<SelectListItem>();
    flatType.Add(new SelectListItem { Value = "Commercial", Text = "Commercial" });
    flatType.Add(new SelectListItem { Value = "Residntial", Text = "Residential" });
}

<div class="jumbotron">
    <h1>Flat Entry</h1>
</div>


@using (Html.BeginForm("FlatsEntry", "Flats", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.f_type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.RadioButtonFor(Model => Model.Location, "inside")<b> Inside</b>
                    @Html.RadioButtonFor(Model => Model.Location, "outside")<b> Outside</b>*@
                @*@Html.DropDownListFor(model => model.City, cities, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.DropDownListFor(model => model.f_type, flatType, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.RadioButtonFor(model => model.f_type, "Commercial")<b> Commercial</b>
                @Html.RadioButtonFor(model => model.f_type, "Residntial")<b> Residential</b>
                @Html.ValidationMessageFor(model => model.f_type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.f_rooms, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.f_rooms, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.f_rooms, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.f_baths, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.f_baths, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.f_baths, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.f_hall, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.f_hall, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.f_hall, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.f_kitchens, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.f_kitchens, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.f_kitchens, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.f_location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.f_location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.f_location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.f_image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.f_image, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.TextBoxFor(model => model.imageFile, new { Type = "File" })*@
                @Html.TextBoxFor(model => model.imageFile, new { Type = "File", htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.imageFile, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "AllFlats")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
