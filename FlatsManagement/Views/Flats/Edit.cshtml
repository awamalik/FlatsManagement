@model FlatsManagement.Models.Flats

@{
    ViewBag.Title = "Edit";
    var flatType = new List<SelectListItem>();
    flatType.Add(new SelectListItem { Value = "Commercial", Text = "Commercial" });
    flatType.Add(new SelectListItem { Value = "Residntial", Text = "Residential" });
}

<div class="jumbotron">
    <h1>Edit Flat</h1>
</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Flats</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    <div class="form-group">
        @Html.LabelFor(model => model.f_type, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.f_type, (List<SelectListItem>)flatType, "Select Type")
            @Html.ValidationMessageFor(model => model.f_type, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.f_rooms, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.f_rooms, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.f_rooms, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.f_baths, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.f_baths, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.f_baths, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.f_hall, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.f_hall, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.f_hall, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.f_kitchens, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.f_kitchens, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.f_kitchens, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.f_location, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.f_location, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.f_location, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
        @Html.LabelFor(model => model.f_image, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.f_image, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.f_image, "", new { @class = "text-danger" })
        </div>
    </div>*@
    

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
